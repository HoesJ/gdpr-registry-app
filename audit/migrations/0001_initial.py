# Generated by Django 2.0 on 2020-07-08 08:39

import audit.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Registered User')),
            ],
            options={
                'verbose_name': 'Business Owner',
                'verbose_name_plural': 'Business Owners',
            },
        ),
        migrations.CreateModel(
            name='BusinessProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Business Process',
                'verbose_name_plural': 'Business Processes',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('source', models.TextField(blank=True, help_text='Indicate the source of the data if not the data subjects themselves.', verbose_name='Original Data Source')),
                ('comments', models.TextField(blank=True, help_text='Please put any comments to the data audit.', verbose_name='Comments')),
                ('risk', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Low'), (2, 'Mid'), (3, 'High')], default=0, help_text='Indicate the inherent risk to the fundamental rights and freedoms of data subjects associated to the data audit.', verbose_name='Inherent Risk')),
            ],
            options={
                'verbose_name': 'Data Audit',
                'verbose_name_plural': 'Data Audits',
            },
        ),
        migrations.CreateModel(
            name='DataBreachDetection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('risk_mitigation', models.TextField(blank=True, help_text='Information about the risk mitigation measures related to the detection of data breaches', verbose_name='Risk Mitigation Measures')),
                ('risk', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Low'), (2, 'Mid'), (3, 'High')], default=0, help_text='Indicate the residual risk of missing a data breach due to lacking detection measures/technology', verbose_name='Residual Risk')),
                ('comments', models.TextField(blank=True, help_text='Please put any comments to the data management policy.', verbose_name='Comments')),
            ],
            options={
                'verbose_name': 'Data Breach Detection',
                'verbose_name_plural': 'Data Breach Detection',
            },
            bases=(models.Model, audit.models.CommonRiskHint),
        ),
        migrations.CreateModel(
            name='DataBreachResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('risk_mitigation', models.TextField(blank=True, help_text='Information about the risk mitigation measures for the response to data breaches. To this end, a suitable incident response plan should be put in place, that include themandatory notification of data breaches to supervisory authority and all involved parties.', verbose_name='Risk Mitigation Measures')),
                ('risk', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Low'), (2, 'Mid'), (3, 'High')], default=0, help_text='Indicate the residual risk of not responding properly to a data breach due to lacking detection measures/technology.', verbose_name='Residual Risk')),
                ('comments', models.TextField(blank=True, help_text='Please put any comments to the data management policy.', verbose_name='Comments')),
            ],
            options={
                'verbose_name': 'Incident Response Plan',
                'verbose_name_plural': 'Incident Response Plan',
            },
            bases=(models.Model, audit.models.CommonRiskHint),
        ),
        migrations.CreateModel(
            name='DataCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
                ('special', models.BooleanField(help_text='Mark this field if the Data Category is special. The processing of this data category shall normally be prohibited.', verbose_name='Special Category')),
            ],
            options={
                'verbose_name': 'Functional Data Category',
                'verbose_name_plural': 'Functional Data Categories',
            },
        ),
        migrations.CreateModel(
            name='DataManagementPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('retention', models.IntegerField(blank=True, null=True, verbose_name='Retention period for the processed data, in Days')),
                ('risk_mitigation', models.TextField(blank=True, help_text='Information about the risk mitigation measures related to the data processing, against Data Breaches.', verbose_name='Risk Mitigation Measures')),
                ('risk', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Low'), (2, 'Mid'), (3, 'High')], default=0, help_text='Indicate the residual risk to the fundamental rights and freedoms of data subjects, given the mitigation measures that have been put in place.', verbose_name='Residual Risk')),
                ('subject_notification', models.TextField(blank=True, help_text='Indicate how data subjects are notified that their data have been registered.', verbose_name='Data Subject Notification')),
                ('comments', models.TextField(blank=True, help_text='Please put any comments to the data management policy.', verbose_name='Comments')),
            ],
            options={
                'verbose_name': 'Data Management Policy',
                'verbose_name_plural': 'Data Management Policies',
            },
            bases=(models.Model, audit.models.CommonRiskHint),
        ),
        migrations.CreateModel(
            name='DataProtectionOfficer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('address', models.CharField(max_length=50, verbose_name='Address')),
                ('telephone', models.CharField(max_length=50, verbose_name='Telephone')),
                ('staff', models.BooleanField(help_text='Is DPO part of the controller organization staff?', verbose_name='Part of Staff')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Registered User')),
            ],
            options={
                'verbose_name': 'Data Protection Officer (DPO)',
                'verbose_name_plural': 'Data Protection Officers (DPOs)',
            },
        ),
        migrations.CreateModel(
            name='DataSubjectCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
                ('vulnerable', models.BooleanField(help_text='Indicates whether the data subjects are considered a vulnerable category. Mark this flag if the data subjects involved are in a situation in which there is a lack of parity in the relationship between the data subject and the controller, such as children, employees, patients, etc.Unmark this flag if none of the categories as mentioned above are involved.', verbose_name='Vulnerable Category')),
            ],
            options={
                'verbose_name': 'Data Subject Category',
                'verbose_name_plural': 'Data Subject Categories',
            },
        ),
        migrations.CreateModel(
            name='NatureOfTransferToThirdCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
            ],
            options={
                'verbose_name': 'Nature of Transfer to third-country/international organization',
                'verbose_name_plural': 'Natures of Transfer to third-country/international organization',
            },
        ),
        migrations.CreateModel(
            name='PDFDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('document', models.FileField(upload_to=audit.models.media_file_name, verbose_name='Document File')),
                ('md5sum', models.CharField(blank=True, max_length=36, verbose_name='MD5Sum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessingActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, help_text='Processing end date, if applicable. By filling in this date, you are declaring that processing ceases as of that date.', null=True, verbose_name='End Date')),
                ('technology', models.TextField(blank=True, help_text='How the activity is performed. Description of the technologies, applications, and software employed in the processing activity.', null=True, verbose_name='Technology')),
                ('comments', models.TextField(blank=True, help_text='Please put any comments to the processing activity.', verbose_name='Comments')),
                ('alternate_activity', models.ForeignKey(blank=True, help_text='Where appropriate, reference the processing activity that replaces the terminated activity. This creates a history in the registry. This may be of use when the legal basis of a processing activity shifts, for instance as the result of a statutory change.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.ProcessingActivity', verbose_name='Alternate Activity')),
            ],
            options={
                'verbose_name': 'Processing Activity',
                'verbose_name_plural': 'Processing Activities',
            },
        ),
        migrations.CreateModel(
            name='ProcessingActivityClassificationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
            ],
            options={
                'verbose_name': 'Processing Activity Classification Level',
                'verbose_name_plural': 'Processing Activity Classification Levels',
            },
        ),
        migrations.CreateModel(
            name='ProcessingLegal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
            ],
            options={
                'verbose_name': 'Legal Base for Processing',
                'verbose_name_plural': 'Legal Bases for Processing',
            },
        ),
        migrations.CreateModel(
            name='ProcessingPurpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
            ],
            options={
                'verbose_name': 'Purpose of Processing',
                'verbose_name_plural': 'Purposes of Processing',
            },
        ),
        migrations.CreateModel(
            name='ProcessingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
            ],
            options={
                'verbose_name': 'Type of Processing',
                'verbose_name_plural': 'Types of Processing',
            },
        ),
        migrations.CreateModel(
            name='RecipientCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classification', models.CharField(blank=True, help_text='Insert a general classification for this entry (if any)', max_length=100, verbose_name='Classification')),
                ('article', models.PositiveIntegerField(blank=True, help_text='Reference to GDPR Article (if any)', null=True, verbose_name='GDPR Article')),
                ('url', models.URLField(blank=True, help_text='Reference URL (if any)', verbose_name='Reference URL')),
            ],
            options={
                'verbose_name': 'Recipient Category',
                'verbose_name_plural': 'Recipient Categories',
            },
        ),
        migrations.CreateModel(
            name='ThirdParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('address', models.CharField(max_length=50, verbose_name='Address')),
                ('country', models.CharField(max_length=200, verbose_name='Country')),
                ('telephone', models.CharField(max_length=50, verbose_name='Telephone')),
                ('statute', models.CharField(max_length=200, verbose_name='Statute')),
                ('third_country', models.BooleanField(help_text='Mark this field if the organization resides in a country outside of the European Union (EU) and the European Economic Area (EEA).', verbose_name='Third Country')),
                ('international', models.BooleanField(help_text='Mark this field if the organization and its subordinate bodies are governed by public international law', verbose_name='International')),
                ('appropriate_safeguards', models.TextField(blank=True, help_text='In case of data transfer to a third country/international organization & transfer based on GDPR Article 49(2), list the documents that clarify the appropriate safeguards and where these documents are stored.', verbose_name='Appropriate Data Safeguards')),
                ('category', models.ForeignKey(help_text='In the context of consent-base processing, to comply with Articles 13 and 14 of the GDPR, controllers will need to provide a full list of recipients or categories of recipients including processors.', on_delete=django.db.models.deletion.DO_NOTHING, to='audit.RecipientCategory', verbose_name='Category')),
                ('third_country_transfer', models.ForeignKey(blank=True, help_text='Please specify why the data is transferred to this third-country/international organization', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.NatureOfTransferToThirdCountry', verbose_name='Nature of Transfer to third-country/international organization')),
            ],
            options={
                'verbose_name': 'Third-party Organization',
                'verbose_name_plural': 'Third-party Organizations',
            },
        ),
        migrations.CreateModel(
            name='YourOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('address', models.CharField(max_length=50, verbose_name='Address')),
                ('country', models.CharField(max_length=200, verbose_name='Country')),
                ('telephone', models.CharField(max_length=50, verbose_name='Telephone')),
                ('statute', models.CharField(max_length=200, verbose_name='Statute')),
                ('third_country', models.BooleanField(help_text='Mark this field if the organization resides in a country outside of the European Union (EU) and the European Economic Area (EEA).', verbose_name='Third Country')),
                ('international', models.BooleanField(help_text='Mark this field if the organization and its subordinate bodies are governed by public international law', verbose_name='International')),
                ('public_authority', models.BooleanField(help_text='Mark this field if the organization is a public authority (except for courts acting in their judicial capacity)', verbose_name='Public Authority')),
                ('monitoring', models.BooleanField(help_text="Mark this field if the organization's core activities require large scale, regular and systematic monitoring of individuals (for example, online behaviour tracking)", verbose_name='Large-scale Monitoring')),
                ('special_category', models.BooleanField(help_text="Mark this field if the organization's core activities consist of processing on a large scale of special category data, or data relating to criminal convictions and offences", verbose_name='Special Data')),
                ('business', models.ManyToManyField(blank=True, help_text='You should insert each business process in the Organization that may handle personal data (e.g., Human Resources)', to='audit.BusinessProcess', verbose_name='Business Processes')),
                ('officer', models.ForeignKey(blank=True, help_text='Please insert the Data Protection Officer (if any). A data protection officer (DPO) may be mandatory for public authorities, or if certain types of processing activities are carried out by the organization. The DPO must be independent, an expert in data protection, adequately resourced, and report to the highest management level.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.DataProtectionOfficer', verbose_name='Data Protection Officer (DPO)')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Your Organizations',
            },
        ),
        migrations.CreateModel(
            name='DataSubjectRights',
            fields=[
                ('pdfdocument_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='audit.PDFDocument')),
            ],
            options={
                'verbose_name': 'Data Subject Rights Document',
                'verbose_name_plural': 'Data Subject Rights Documents',
            },
            bases=('audit.pdfdocument',),
        ),
        migrations.CreateModel(
            name='DPIA',
            fields=[
                ('pdfdocument_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='audit.PDFDocument')),
            ],
            options={
                'verbose_name': 'Data protection Impact Assessment (DPIA)',
                'verbose_name_plural': 'Data protection Impact Assessments (DPIAs)',
            },
            bases=('audit.pdfdocument',),
        ),
        migrations.CreateModel(
            name='ProcessingActivityClassificationDocument',
            fields=[
                ('pdfdocument_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='audit.PDFDocument')),
            ],
            options={
                'verbose_name': 'Processing Activity Classification Document',
                'verbose_name_plural': 'Processing Activity Classification Documents',
            },
            bases=('audit.pdfdocument',),
        ),
        migrations.CreateModel(
            name='ProcessorContract',
            fields=[
                ('pdfdocument_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='audit.PDFDocument')),
                ('processor', models.ForeignKey(help_text='Third-party organization with which the Contract has been signed.', on_delete=django.db.models.deletion.DO_NOTHING, to='audit.ThirdParty', verbose_name='Processor')),
            ],
            options={
                'verbose_name': 'Processor Contract',
                'verbose_name_plural': 'Processor Contracts',
            },
            bases=('audit.pdfdocument',),
        ),
        migrations.AddField(
            model_name='processingactivity',
            name='classification',
            field=models.ForeignKey(blank=True, help_text="Indicate the classification level of the processing activity according to the organization's classification system (choose the highest in case multiple are involved).", null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.ProcessingActivityClassificationLevel', verbose_name='Classification Level'),
        ),
        migrations.AddField(
            model_name='processingactivity',
            name='data_audit',
            field=models.ManyToManyField(blank=True, help_text='Specify the data handled by this activity (output of a data audit process).', to='audit.Data', verbose_name='Data Audit'),
        ),
        migrations.AddField(
            model_name='processingactivity',
            name='legal',
            field=models.ForeignKey(help_text='What is the Legal Base for Processing? It is mandatory!', on_delete=django.db.models.deletion.DO_NOTHING, to='audit.ProcessingLegal', verbose_name='Legal Base for Processing'),
        ),
        migrations.AddField(
            model_name='processingactivity',
            name='proc_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='audit.ProcessingType', verbose_name='Processing Type'),
        ),
        migrations.AddField(
            model_name='processingactivity',
            name='purpose',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='audit.ProcessingPurpose', verbose_name='Purpose'),
        ),
        migrations.AddField(
            model_name='data',
            name='breach_detection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.DataBreachDetection', verbose_name='Data Breach Detection'),
        ),
        migrations.AddField(
            model_name='data',
            name='breach_response',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.DataBreachResponse', verbose_name='Incident Response Plan'),
        ),
        migrations.AddField(
            model_name='data',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='audit.DataCategory', verbose_name='Data Category'),
        ),
        migrations.AddField(
            model_name='data',
            name='management',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.DataManagementPolicy', verbose_name='Data Management Policy'),
        ),
        migrations.AddField(
            model_name='data',
            name='subject_category',
            field=models.ManyToManyField(to='audit.DataSubjectCategory', verbose_name='Data Subject Category'),
        ),
        migrations.AddField(
            model_name='businessprocess',
            name='activities',
            field=models.ManyToManyField(blank=True, help_text='You should insert all processing activities that may handle personal data are part of the business process (e.g., Collection of Curriculum Vitae)', to='audit.ProcessingActivity', verbose_name='Processing Activities'),
        ),
        migrations.AddField(
            model_name='businessprocess',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='Please indicate who is responsible for and manages this business process.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.BusinessOwner', verbose_name='Process Owner'),
        ),
        migrations.AddField(
            model_name='processingactivityclassificationlevel',
            name='document',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.ProcessingActivityClassificationDocument', verbose_name='Processing Activity Classification Document'),
        ),
        migrations.AddField(
            model_name='datamanagementpolicy',
            name='processor_contracts',
            field=models.ManyToManyField(blank=True, help_text='If the data is ACTUALLY transferred to OTHER organizations (e.g., Data Processors), please upload the contract that regulates this data transfer, and relevant information about each third-party organization.', to='audit.ProcessorContract', verbose_name='Data Processor Contracts'),
        ),
        migrations.AddField(
            model_name='datamanagementpolicy',
            name='subject_rights',
            field=models.ForeignKey(blank=True, help_text='Reference the documents that determine the procedures intended to guard the rights of data subjects. The document should also indicate which special measures have been taken to enforce/support the exercising of the rights of data subjects.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.DataSubjectRights', verbose_name='Data Subject Rights'),
        ),
        migrations.AddField(
            model_name='data',
            name='dpia',
            field=models.ForeignKey(blank=True, help_text='If the processing activity probably entails a high risk for the fundamental rights and freedoms of data subjects, a DPIA must be completed (GDPR Article 35).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='audit.DPIA', verbose_name='Data protection Impact Assessment'),
        ),
    ]
